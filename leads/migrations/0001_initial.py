# Generated by Django 3.2.4 on 2021-06-24 17:08

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=50)),
                ('deal_stage', models.CharField(choices=[('Proposal Sent', 'Proposal Sent'), ('Meeting Done', 'Meeting Done'), ('Trial/POC', 'Trial/POC'), ('Finalised BOM', 'Finalised BOM'), ('Won', 'Won'), ('Lost', 'Lost')], max_length=20)),
                ('services', models.CharField(choices=[('Microsoft 365', 'Microsoft 365'), ('Microsoft Azure', 'Microsoft Azure'), ('AWS', 'AWS'), ('Google Workspace', 'Google Workspace')], max_length=20)),
                ('deal_value', models.IntegerField()),
                ('deal_priority', models.CharField(choices=[('Low', ' Low'), ('Medium', 'Medium'), ('High', 'High')], max_length=20)),
                ('sales_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_person_lead', to='leads.agent')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=100)),
                ('contact_person', models.CharField(max_length=50)),
                ('mobile_number', models.IntegerField()),
                ('customer_type', models.CharField(choices=[('New', 'New'), ('Existing', 'Existing')], max_length=10)),
                ('testimonial', models.BooleanField(default=False)),
                ('case_study', models.BooleanField(default=False)),
                ('services', models.CharField(choices=[('Microsoft 365', 'Microsoft 365'), ('Microsoft Azure', 'Microsoft Azure'), ('AWS', 'AWS'), ('Google Workspace', 'Google Workspace')], max_length=20)),
                ('renewal_date', models.DateTimeField()),
                ('last_contact', models.DateTimeField()),
                ('last_meeting', models.DateTimeField()),
                ('pending_actions', models.CharField(max_length=254)),
                ('notes', models.CharField(max_length=254)),
                ('customer_manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_manager', to='leads.agent')),
                ('sales_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_person', to='leads.agent')),
            ],
        ),
    ]
